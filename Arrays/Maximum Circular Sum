#include<iostream>
using namespace std;
#include<cstring>
#include <bits/stdc++.h>
class node
{
public:
    int data;
    node*next;
    node(int d)
    {
        data=d;
        next=nullptr;
    }
};
int maxSum(node* head, int n)
{
    int ms=INT_MIN;
    node*temp=head;
    for(int i=0; i<n; i++)
    {
        int cs=0;
        for(int j=1; j<=n; j++)
        {
            cs=cs+temp->data;
            if(cs<0)
            {
                cs=0;
            }
            ms=max(cs,ms);
            temp=temp->next;
        }//////////////10 -3 -4 7 6 5 -4 -1
        temp=head->next;
        head=head->next;
    }
    return ms;
}
void makeCircular(node* &head)
{
    node*temp=head;
    node*s =nullptr;
    while(temp!=nullptr)
    {
        s=temp;
        temp=temp->next;
    }
    s->next=head;
}
void insertAtTail(node* &head, int data)
{
    if(head==nullptr)
    {
        head=new node(data);
        return;
    }

    node*tail=head;
    while(tail->next!=nullptr)
    {
        tail=tail->next;
    }
    tail->next=new node(data);
    return;
}
void printList(node*head)
{
    node*temp=head;
    while(temp!=nullptr)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}
int main()
{
    int tc;
    cin>>tc;
    for(int l=0; l<tc; l++)
    {
        node*head=nullptr;
        int n;
        cin>>n;
        int data;
        for(int i=0; i<n; i++)
        {
            cin>>data;
            insertAtTail(head,data);
        }
        makeCircular(head);
        cout<<maxSum(head,n)<<endl;
    }
    return 0;
}
